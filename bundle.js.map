{"version":3,"sources":["banner-change-image.js","parallax.js","vertical-slider.js","animation-cards.js","steps-animation.js","modal.js","send-request.js","anchor.js","client-slider-mobile.js","faq.js"],"names":["screens","document","querySelectorAll","index","promoBlocks","setInterval","classList","remove","length","add","mediaQuery","forEach","parallaxItems","promoBlock","handleParallax","clientX","clientY","width","height","left","top","getBoundingClientRect","offsetX","offsetY","item","style","transform","addEventListener","e","touches","touch","window","matchMedia","initObserver","stacks","stack","i","next","IntersectionObserver","entry","ratio","intersectionRatio","threshold","Array","from","_","observe","matches","cards","section","querySelector","ticking","updateCards","rect","windowHeight","innerHeight","sectionTopViewport","offsetHeight","progress","Math","min","abs","step","card","disappearStart","innerWidth","requestAnimationFrame","steps","workSection","isIntersecting","animationDelay","button","getElementById","closeBtn","modal","overlay","let","isSubmitting","emailInput","form","nameInput","emailError","nameError","textContent","preventDefault","email","value","trim","name","isValid","test","data","source","fetch","method","headers","Content-Type","body","JSON","stringify","then","res","ok","json","Error","alert","reset","closest","catch","console","error","err","finally","link","headerHeight","targetId","this","getAttribute","substring","targetEl","y","scrollY","scrollTo","behavior","navItems","wrappers","dataset","targetWrapper","nav","wrapper","answer","icon","contains","scrollHeight","once"],"mappings":"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","file":"bundle.js","sourcesContent":["const screens = document.querySelectorAll(\".screen\");\nlet index = 0;\n\nsetInterval(() => {\n    screens[index].classList.remove(\"active\");\n    index = (index + 1) % screens.length;\n    screens[index].classList.add(\"active\");\n}, 5000);\n","const promoBlocks = document.querySelectorAll(\".parallax\");\n\npromoBlocks.forEach((promoBlock) => {\n    const parallaxItems = promoBlock.querySelectorAll(\".icon\");\n\n    function handleParallax(clientX, clientY) {\n        const { width, height, left, top } = promoBlock.getBoundingClientRect();\n        const offsetX = (clientX - left - width / 2) / width;\n        const offsetY = (clientY - top - height / 2) / height;\n\n        parallaxItems.forEach((item) => {\n            const speed = 15;\n            item.style.transform = `translate(${offsetX * speed}px, ${offsetY * speed}px)`;\n        });\n    }\n\n    promoBlock.addEventListener(\"mousemove\", (e) => {\n        handleParallax(e.clientX, e.clientY);\n    });\n\n    promoBlock.addEventListener(\"touchmove\", (e) => {\n        if (e.touches.length > 0) {\n            const touch = e.touches[0];\n            handleParallax(touch.clientX, touch.clientY);\n        }\n    });\n});\n","const mediaQuery = window.matchMedia(\"(min-width: 1024px)\");\n\nfunction initObserver() {\n    const stacks = document.querySelectorAll(\".client__wrapper\");\n\n    stacks.forEach((stack, i) => {\n        if (i === stacks.length - 1) return;\n\n        const next = stacks[i + 1];\n\n        const observer = new IntersectionObserver(\n            ([entry]) => {\n                const ratio = entry.intersectionRatio;\n\n                if (ratio > 0.2) {\n                    const adjustedRatio = (ratio - 0.2) / (1 - 0.2);\n                    const scale = 1 - adjustedRatio * 0.2;\n                    stack.style.transform = `scale(${scale})`;\n                } else {\n                    stack.style.transform = `scale(1)`;\n                }\n            },\n            {\n                threshold: Array.from({ length: 101 }, (_, i) => i / 100),\n            }\n        );\n\n        observer.observe(next);\n    });\n}\n\nif (mediaQuery.matches) {\n    initObserver();\n}\n\nmediaQuery.addEventListener(\"change\", (e) => {\n    if (e.matches) {\n        initObserver();\n    }\n});\n","const cards = document.querySelectorAll(\".card\");\nconst section = document.querySelector(\".challenge\");\n\nlet ticking = false;\n\nwindow.addEventListener(\"scroll\", () => {\n    if (!ticking && window.innerWidth >= 1024) {\n        window.requestAnimationFrame(() => {\n            updateCards();\n            ticking = false;\n        });\n        ticking = true;\n    }\n});\n\nfunction updateCards() {\n    const rect = section.getBoundingClientRect();\n    const windowHeight = window.innerHeight;\n    const sectionTopViewport = rect.top;\n\n    if (sectionTopViewport <= 0 && sectionTopViewport >= -(section.offsetHeight - windowHeight)) {\n        const progress = Math.min(\n            Math.abs(sectionTopViewport) / (section.offsetHeight - windowHeight),\n            1\n        );\n        const step = 1 / (cards.length + 1);\n\n        cards.forEach((card, index) => {\n            const disappearStart = (index + 1) * step;\n\n            if (progress >= disappearStart) {\n                card.classList.add(\"hidden-up\");\n            } else {\n                card.classList.remove(\"hidden-up\");\n            }\n        });\n    } else if (sectionTopViewport > 0) {\n        cards.forEach((card) => card.classList.remove(\"hidden-up\"));\n    } else {\n        cards.forEach((card) => card.classList.add(\"hidden-up\"));\n    }\n}\n","document.addEventListener(\"DOMContentLoaded\", () => {\n    const steps = document.querySelectorAll(\".work__step\");\n    const workSection = document.querySelector(\".work\");\n    if (!steps.length || !workSection) return;\n\n    const observer = new IntersectionObserver(\n        ([entry]) => {\n            if (entry.isIntersecting) {\n                steps.forEach((step, i) => {\n                    step.style.animationDelay = `${i * 0.3}s`;\n                    step.classList.add(\"animate\");\n                });\n            } else {\n                steps.forEach((step) => {\n                    step.classList.remove(\"animate\");\n                    step.style.animationDelay = \"0s\";\n                });\n            }\n        },\n        { threshold: 0.4 }\n    );\n\n    observer.observe(workSection);\n});\n","document.querySelectorAll(\".open-modal\").forEach((button) => {\n    button.addEventListener(\"click\", () => {\n        document.getElementById(\"myModal\").classList.add(\"active\");\n    });\n});\n\ndocument.querySelectorAll(\".modal\").forEach((modal) => {\n    const closeBtn = modal.querySelector(\".modal__close\");\n    const overlay = modal.querySelector(\".modal__overlay\");\n\n    closeBtn.addEventListener(\"click\", () => {\n        modal.classList.remove(\"active\");\n    });\n\n    overlay.addEventListener(\"click\", () => {\n        modal.classList.remove(\"active\");\n    });\n});\n","document.querySelectorAll(\".email-form\").forEach((form) => {\n    let isSubmitting = false;\n\n    const emailInput = form.querySelector('input[name=\"email\"]');\n    const nameInput = form.querySelector('input[name=\"name\"]');\n\n    const emailError = form.querySelector(\".email-error\");\n    const nameError = form.querySelector(\".name-error\");\n\n    // Live очищення помилок\n    emailInput.addEventListener(\"input\", () => {\n        emailInput.classList.remove(\"invalid\");\n        emailError.textContent = \"\";\n    });\n\n    if (nameInput) {\n        nameInput.addEventListener(\"input\", () => {\n            nameInput.classList.remove(\"invalid\");\n            nameError.textContent = \"\";\n        });\n    }\n\n    form.addEventListener(\"submit\", function (e) {\n        e.preventDefault();\n\n        if (isSubmitting) return; // 🛑 захист від повторної відправки\n\n        const email = emailInput.value.trim();\n        const name = nameInput?.value.trim();\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\n        let isValid = true;\n\n        // Email валідація\n        if (!email) {\n            emailError.textContent = \"Поле email обов’язкове\";\n            emailInput.classList.add(\"invalid\");\n            isValid = false;\n        } else if (!emailRegex.test(email)) {\n            emailError.textContent = \"Введіть коректний email\";\n            emailInput.classList.add(\"invalid\");\n            isValid = false;\n        }\n\n        // Name валідація\n        if (nameInput && !name) {\n            nameError.textContent = \"Поле ім’я обов’язкове\";\n            nameInput.classList.add(\"invalid\");\n            isValid = false;\n        }\n\n        if (!isValid) return;\n\n        // 🟡 Установлюємо прапорець \"запит триває\"\n        isSubmitting = true;\n\n        const data = { email };\n        data.source = \"audit-ua\";\n\n        if (nameInput) data.name = name;\n\n        fetch(\"https://remrkt.me/api/leads\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(data),\n        })\n            .then((res) => {\n                if (!res.ok) throw new Error(\"Помилка сервера\");\n                return res.json();\n            })\n            .then(() => {\n                alert(\"Форма успішно надіслана!\");\n                form.reset();\n                emailInput.classList.remove(\"invalid\");\n                emailError.textContent = \"\";\n                if (nameInput) {\n                    nameInput.classList.remove(\"invalid\");\n                    nameError.textContent = \"\";\n                }\n\n                // Закрити модалку, якщо форма в ній\n                const modal = form.closest(\".modal\");\n                if (modal) modal.classList.remove(\"active\");\n            })\n            .catch((err) => {\n                alert(\"Помилка при відправці.\");\n                console.error(err);\n            })\n            .finally(() => {\n                // 🔓 Дозволити наступну відправку\n                isSubmitting = false;\n            });\n    });\n});\n","document.querySelectorAll(\".header__nav-item\").forEach((link) => {\n    link.addEventListener(\"click\", function (e) {\n        e.preventDefault();\n\n        const targetId = this.getAttribute(\"href\").substring(1);\n        const targetEl = document.getElementById(targetId);\n\n        if (targetEl) {\n            const headerHeight = document.querySelector(\".header\").offsetHeight;\n            const y = targetEl.getBoundingClientRect().top + window.scrollY - headerHeight;\n\n            window.scrollTo({\n                top: y,\n                behavior: \"smooth\",\n            });\n        }\n    });\n});\n","const navItems = document.querySelectorAll(\".client__nav-item\");\nconst wrappers = document.querySelectorAll(\".client__wrapper\");\n\nnavItems.forEach((item) => {\n    item.addEventListener(\"click\", () => {\n        const index = item.dataset.index;\n\n        // Зняти active з усіх\n        navItems.forEach((nav) => nav.classList.remove(\"active\"));\n        wrappers.forEach((wrapper) => wrapper.classList.remove(\"active\"));\n\n        // Додати active потрібному\n        item.classList.add(\"active\");\n        const targetWrapper = document.querySelector(`.client__wrapper[data-index=\"${index}\"]`);\n        if (targetWrapper) {\n            targetWrapper.classList.add(\"active\");\n        }\n    });\n});\n","document.querySelectorAll(\".faq__question\").forEach((button) => {\n    button.addEventListener(\"click\", () => {\n        const item = button.closest(\".faq__item\");\n        const answer = item.querySelector(\".faq__answer\");\n        const icon = button.querySelector(\".faq__icon\");\n\n        const isActive = item.classList.contains(\"active\");\n\n        if (isActive) {\n            // Закриваємо\n            answer.style.height = answer.scrollHeight + \"px\"; // для плавного старту\n            requestAnimationFrame(() => {\n                answer.style.height = \"0\";\n            });\n            item.classList.remove(\"active\");\n            icon.textContent = \"+\";\n        } else {\n            // Відкриваємо\n            item.classList.add(\"active\");\n            answer.style.height = answer.scrollHeight + \"px\";\n            icon.textContent = \"−\";\n\n            answer.addEventListener(\n                \"transitionend\",\n                () => {\n                    if (item.classList.contains(\"active\")) {\n                        answer.style.height = \"auto\";\n                    }\n                },\n                { once: true }\n            );\n        }\n    });\n});\n"]}